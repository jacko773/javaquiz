scalar EmailAddress
scalar JSONType
scalar Date
type UserInfo {
  sub: String
  name: String
  picture: String
  email: String
  zoneinfo: String
  locale: String
  azureGroup: String
}

union Permission = FunctionalityPermission | EntityFunction

type FunctionalityPermission {
  product: String
  value: String
  projectName: String @deprecated(reason: "use product")
  name: String @deprecated(reason: "use stringValue")
  authorized: String @deprecated(reason: "")
  # entityFunction: EntityFunction
}

type UserAccount {
  id: ID
  username: Strin
  meta: UserMeta
  lastLogin: LastLogin
  profiles(withPermissions:Boolean = true, product: UserProfileProduct): UserProfileList
  businessAccounts: BusinessAccountList
  # permissions: [Permission!]
}

type UserProfileList {
  accountProfiles: [UserProfile!]!
  currentProfile: UserProfile
  defaultProfile: UserProfile
}

type UserPhone {
  primary: String
  primaryVerifed: Boolean
}

type UserEmail {
  primary: EmailAddress
  primaryVerified: Boolean
  secondary: EmailAddress
}

type Authentication {
  identityProvider: String
}

type UserMetabinamtbka {
  lastLoginAt: Date
  created: UserMetaEntry
  updated: UserMetaEntry
}

type UserMetaEntry {
  timestamp: Date
  clientId: String
}



type TwoFactorAuthentication {
  verified: Boolean
}

# TODO: Start - Future placeholders
type BusinessAccountList {
  dmpAccountGroups:[DmpAccountGroup]
  publishers:[Publisher]
  adformInventorySources:[AdformInventorySource]
}

type AdformInventorySource {
  id: ID
}
type LicencedFeature {
  id:ID
}
enum EntityDomain {
  CAMPAIGN
  AUDIENCE
  PUBLISHER
  CREATIVE
}



type Query {
  userInfo:UserInfo @deprecated(reason: "use userAccount")
  userPermissions:[FunctionalityPermission]! @deprecated(reason: "use userAccount.permissions")
  hasPermission (
      projectName:String,
      product:String,
      name:String!
  ):FunctionalityPermission! @deprecated(reason: "use userAccount.permissions")
  userIsAuthenticated:Boolean!
  userAccount:UserAccount
}

type Mutation {
  clearMiddlewareStoreMapping:Boolean! @deprecated(reason: "mapping store is deprecated")
  setDefaultProfile(id: ID!):ID
}
